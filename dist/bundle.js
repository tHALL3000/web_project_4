!function(){"use strict";function e(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}function t(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var n=function(){function n(e,t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,n),this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._form=t,console.log(t)}var r,o;return r=n,(o=[{key:"_showErrorMessage",value:function(e){var t=this._form.querySelector("#".concat(e.id,"-error"));t.textContent=e.validationMessage,t.classList.add(this._errorClass),e.classList.add(this._inputErrorClass)}},{key:"_hideErrorMessage",value:function(e){var t=this._form.querySelector("#".concat(e.id,"-error"));t.textContent="",t.classList.remove(this._errorClass),e.classList.remove(this._inputErrorClass)}},{key:"_checkInputValidity",value:function(e,t){e.validity.valid?this._hideErrorMessage(e,t):this._showErrorMessage(e,t)}},{key:"_toggleButtonState",value:function(e,t){this._inputs.every((function(e){return e.validity.valid}))?(this._button.classList.remove(this._inactiveButtonClass),this._button.disabled=!1):(this._button.classList.add(this._inactiveButtonClass),this._button.disabled=!0)}},{key:"_setEventListeners",value:function(){var t,n=this;this._inputs=function(t){if(Array.isArray(t))return e(t)}(t=this._form.querySelectorAll(this._inputSelector))||function(e){if("undefined"!=typeof Symbol&&null!=e[Symbol.iterator]||null!=e["@@iterator"])return Array.from(e)}(t)||function(t,n){if(t){if("string"==typeof t)return e(t,n);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?e(t,n):void 0}}(t)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}(),this._button=this._form.querySelector(this._submitButtonSelector),this._inputs.forEach((function(e){e.addEventListener("input",(function(){n._checkInputValidity(e,n._button),n._toggleButtonState(n._inputs,n._button)}))}))}},{key:"enableValidation",value:function(){var e=this;this._form.addEventListener("submit",(function(t){t.preventDefault(),e._button.classList.add(e._inactiveButtonClass),e._button.disabled=!0})),this._setEventListeners()}}])&&t(r.prototype,o),n}();function r(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}document.querySelector(".modal__image"),document.querySelector(".modal__caption"),document.querySelector(".overlay_type_preview");var o=function(){function e(t,n){var r,o,i=this,a=t.data,c=t.handleCardClick;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),o=function(){i._heart.classList.toggle("photo-grid__heart_active")},(r="_handleLikeIcon")in this?Object.defineProperty(this,r,{value:o,enumerable:!0,configurable:!0,writable:!0}):this[r]=o,this._text=a.name,this._link=a.link,this._cardSelector=n,this._handleCardClick=c,console.log(c)}var t,n;return t=e,(n=[{key:"_getTemplate",value:function(){return document.querySelector(this._cardSelector).content.querySelector(".photo-grid__card").cloneNode(!0)}},{key:"_setEventListeners",value:function(){var e=this,t=this._card.querySelector(".photo-grid__heart"),n=this._card.querySelector(".photo-grid__delete"),r=this._card.querySelector(".photo-grid__picture");t.addEventListener("click",(function(){return e._handleLikeIcon()})),n.addEventListener("click",(function(){return e._handleDeleteIcon()})),r.addEventListener("click",(function(){return e._handleCardClick({link:e._link,name:e._name})}))}},{key:"_handleDeleteIcon",value:function(){this._card.remove()}},{key:"_prepareCard",value:function(){this._card.querySelector(".photo-grid__title").textContent=this._name,this._card.querySelector(".photo-grid__picture").src=this._link,this._card.alt="Image"+this._name,this._heart=this._card.querySelector(".photo-grid__heart")}},{key:"generateCard",value:function(){return this._card=this._getTemplate(),this._setEventListeners(),this._prepareCard(),this._card}}])&&r(t.prototype,n),e}();function i(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var c=function(){function e(t){var n=this;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),a(this,"_handleEscKey",(function(e){e.preventDefault(),"Escape"===e.key&&n.close()})),a(this,"_handleOutsideClick",(function(e){n.close()})),this._popupElement=document.querySelector(t)}var t,n;return t=e,(n=[{key:"open",value:function(){var e=this;this._popupElement.classList.add("overlay_show"),this._popupElement.classList.contains("overlay_show")&&(document.addEventListener("keydown",(function(){e._handleEscKey()})),this._popupElement.addEventListener("click",(function(){e._handleOutsideClick()})))}},{key:"close",value:function(){this._popupElement.classList.remove("overlay_show"),document.removeEventListener("keydown",this._handleEscKey),modal.removeEventListener("click",this._handleOutsideClick)}},{key:"setEventListeners",value:function(){var e=this,t=document.querySelector(".modal__close-button");this._popupElement.classList.addEventListener("click",(function(n){(n.target.classList.contains("overlay_show")||n.target.classList.contains(t))&&e.close()}))}}])&&i(t.prototype,n),e}();function u(e){return(u="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function l(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function s(e,t,n){return(s="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=d(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(n):o.value}})(e,t,n||e)}function f(e,t){return(f=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function p(e,t){if(t&&("object"===u(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function d(e){return(d=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var h=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&f(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=d(r);if(o){var n=d(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return p(this,e)});function a(e,t){var n;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(n=i.call(this,t))._submitForm=e,n._popupForm=n._popupElement.querySelector(".form-profile"),n}return t=a,(n=[{key:"_getInputValues",value:function(){var e=this;return this._inputSource=this._popupForm.querySelectorAll(".modal__form-control-input"),profileName.textContent=nameInput.value,profileTitle.textContent=titleInput.value,this._inputValues={},this._inputSource.forEach((function(t){return e._inputValues[nameInput.name]=nameInput.value})),this._inputValues}},{key:"setEventListeners",value:function(){var e=this;s(d(a.prototype),"setEventListeners",this).call(this),this._popupSelector.addEventListener("submit",(function(t){t.preventDefault(),e._submitForm(e._getInputValues()),toggleModal(overlay)}))}},{key:"close",value:function(){this._popupForm.reset(),s(d(a.prototype),"close",this).call(this)}}])&&l(t.prototype,n),a}(c);function m(e){return(m="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function y(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function _(e,t,n){return(_="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=w(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(n):o.value}})(e,t,n||e)}function v(e,t){return(v=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function b(e,t){if(t&&("object"===m(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function w(e){return(w=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var g=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&v(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=w(r);if(o){var n=w(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return b(this,e)});function a(e){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),i.call(this,e)}return t=a,(n=[{key:"open",value:function(e){var t=e.link,n=e.name;this._popupElement.querySelector(".modal__caption").textcontent=n;var r=this._popupElement.querySelector(".modal__image");r.src=t,r.alt="Magnificent artist interpretation of ".concat(n),_(w(a.prototype),"open",this).call(this)}}])&&y(t.prototype,n),a}(c);function S(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var E=function(){function e(t,n){var r=t.items,o=t.renderer;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.renderer=o,this.items=r,this.cardContainer=document.querySelector(n)}var t,n;return t=e,(n=[{key:"renderSection",value:function(){var e=this;this.items.forEach((function(t){e.renderer(t)}))}},{key:"addItem",value:function(e){this.cardContainer.prepend(e)}}])&&S(t.prototype,n),e}(),k=document.querySelector("#editButton"),C=document.querySelector("#addPhoto"),x=document.querySelector(".modal_edit_profile").querySelector(".form-profile"),L=document.querySelector(".profile__name"),q=document.querySelector(".profile__job"),O=document.forms.profile.elements.name,j=document.forms.profile.elements.title,M=document.querySelector(".overlay_type_edit"),D=(document.querySelector(".modal__close-button"),document.querySelector(".modal__close-button_add-photo")),B=document.querySelector(".modal__close-button_image"),P=(document.querySelector(".modal"),document.querySelector(".form_add")),I=function(e){e.classList.toggle("overlay_show"),e.classList.contains("overlay_show")?(document.addEventListener("keydown",handleEscKey),e.addEventListener("click",A)):(document.removeEventListener("keydown",handleEscKey),e.removeEventListener("click",A))},A=function(e){e.target.classList.contains("overlay")&&I(e.target)},H=document.querySelector(".overlay_type_edit"),R=document.querySelector(".overlay_type_add"),V=document.querySelector(".overlay_type_preview");k.addEventListener("click",(function(){O.value=L.textContent,j.value=q.textContent,I(H)})),C.addEventListener("click",(function(){I(R),document.getElementById("newPicture").reset()})),B.addEventListener("click",(function(){I(V)})),document.querySelector(".form-profile").addEventListener("submit",(function(e){e.preventDefault(),L.textContent=O.value,q.textContent=j.value,I(M)})),D.addEventListener("click",(function(){I(R)}));var T=document.querySelector(".form_add"),F=document.forms.newPicture.elements.nameOfPlace,N=document.forms.newPicture.elements.linkOfPlace,W=".card-template";T.addEventListener("submit",(function(e){e.preventDefault();var t={name:F.value,link:N.value};Y(t),I(R)}));var K=document.querySelector(".photo-grid"),X=function(e){J.open({name:e.name,link:e.link})},Y=(new E({renderer:function(e){console.log("renderer",e);var t=new o({data:e,handleCardClick:X},W);K.prepend(t.generateCard())}}),function(e){var t=new o({data:e,handleCardClick:X},W);K.prepend(t.generateCard())});[{name:"Silicon Valley",link:"https://images.unsplash.com/photo-1621646912321-c97a233701d2?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=716&q=80"},{name:"Miami Beach",link:"https://images.unsplash.com/photo-1622942817454-ed616e8d3a2d?ixid=MnwxMjA3fDB8MHx2aXN1YWwtc2VhcmNofDF8fHxlbnwwfHx8fA%3D%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=800&q=60"},{name:"Land of Fire & Ice",link:"https://images.unsplash.com/photo-1620053553156-92e15d54f7ee?ixid=MnwxMjA3fDB8MHxzZWFyY2h8OXx8eWVsbG93JTIwZmxhbWUlMjBibHVlJTIwc21va2V8ZW58MHx8MHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=800&q=60"},{name:"Neon Rain",link:"https://images.unsplash.com/photo-1621870616319-eeb7fdf31234?ixid=MnwxMjA3fDB8MHx2aXN1YWwtc2VhcmNofDF8fHxlbnwwfHx8fA%3D%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=800&q=60"},{name:"Fashion Capital",link:"https://images.unsplash.com/photo-1618245613901-e52b7e0123c7?ixid=MnwxMjA3fDB8MHxwcm9maWxlLXBhZ2V8MTl8fHxlbnwwfHx8fA%3D%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=800&q=60"},{name:"Cape Canaveral",link:"https://images.unsplash.com/photo-1530447920184-b88c8872?ixid=MnwxMjA3fDB8MHx2aXN1YWwtc2VhcmNofDF8fHxlbnwwfHx8fA%3D%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=800&q=60"}].forEach((function(e){Y(e)}));var Z=document.querySelectorAll(".modal"),G=new h((function(e){G.open({nameInput:input.name,titleInput:input.title})}),Z);G.setEventListeners();var J=new g(Z);J.setEventListeners();var U={inputSelector:".modal__form-control-input",submitButtonSelector:".button",inactiveButtonClass:"button_disabled",inputErrorClass:"modal__form-control-input-error",errorClass:"popup-error"},z=new n(U,x),$=new n(U,P);z.enableValidation(),$.enableValidation()}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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LG1CQUNsQkQsRUFBa0JDLG1CIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vd2ViX3Byb2plY3RfNC8uL3NyYy91dGlscy9Gb3JtVmFsaWRhdG9yLmpzIiwid2VicGFjazovL3dlYl9wcm9qZWN0XzQvLi9zcmMvY29tcG9uZW50cy9DYXJkLmpzIiwid2VicGFjazovL3dlYl9wcm9qZWN0XzQvLi9zcmMvY29tcG9uZW50cy9Qb3B1cC5qcyIsIndlYnBhY2s6Ly93ZWJfcHJvamVjdF80Ly4vc3JjL2NvbXBvbmVudHMvUG9wdXBXaXRoRm9ybS5qcyIsIndlYnBhY2s6Ly93ZWJfcHJvamVjdF80Ly4vc3JjL2NvbXBvbmVudHMvUG9wdXBXaXRoSW1hZ2UuanMiLCJ3ZWJwYWNrOi8vd2ViX3Byb2plY3RfNC8uL3NyYy91dGlscy9TZWN0aW9uLmpzIiwid2VicGFjazovL3dlYl9wcm9qZWN0XzQvLi9zcmMvaW5kZXguanMiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqIEBmb3JtYXQgKi9cblxuY2xhc3MgRm9ybVZhbGlkYXRvciB7XG5cdGNvbnN0cnVjdG9yKGNvbmZpZywgZm9ybUVsZW1lbnQpIHtcblx0XHR0aGlzLl9pbnB1dFNlbGVjdG9yID0gY29uZmlnLmlucHV0U2VsZWN0b3I7XG5cdFx0dGhpcy5fc3VibWl0QnV0dG9uU2VsZWN0b3IgPSBjb25maWcuc3VibWl0QnV0dG9uU2VsZWN0b3I7XG5cdFx0dGhpcy5faW5hY3RpdmVCdXR0b25DbGFzcyA9IGNvbmZpZy5pbmFjdGl2ZUJ1dHRvbkNsYXNzO1xuXHRcdHRoaXMuX2lucHV0RXJyb3JDbGFzcyA9IGNvbmZpZy5pbnB1dEVycm9yQ2xhc3M7XG5cdFx0dGhpcy5fZXJyb3JDbGFzcyA9IGNvbmZpZy5lcnJvckNsYXNzO1xuXHRcdHRoaXMuX2Zvcm0gPSBmb3JtRWxlbWVudDtcblx0XHRjb25zb2xlLmxvZyhmb3JtRWxlbWVudCk7XG5cdH1cblxuXHRfc2hvd0Vycm9yTWVzc2FnZShpbnB1dCkge1xuXHRcdGNvbnN0IGVycm9yID0gdGhpcy5fZm9ybS5xdWVyeVNlbGVjdG9yKGAjJHtpbnB1dC5pZH0tZXJyb3JgKTtcblx0XHRlcnJvci50ZXh0Q29udGVudCA9IGlucHV0LnZhbGlkYXRpb25NZXNzYWdlO1xuXHRcdGVycm9yLmNsYXNzTGlzdC5hZGQodGhpcy5fZXJyb3JDbGFzcyk7XG5cdFx0aW5wdXQuY2xhc3NMaXN0LmFkZCh0aGlzLl9pbnB1dEVycm9yQ2xhc3MpO1xuXHR9XG5cdF9oaWRlRXJyb3JNZXNzYWdlKGlucHV0KSB7XG5cdFx0Y29uc3QgZXJyb3IgPSB0aGlzLl9mb3JtLnF1ZXJ5U2VsZWN0b3IoYCMke2lucHV0LmlkfS1lcnJvcmApO1xuXHRcdGVycm9yLnRleHRDb250ZW50ID0gXCJcIjtcblx0XHRlcnJvci5jbGFzc0xpc3QucmVtb3ZlKHRoaXMuX2Vycm9yQ2xhc3MpO1xuXHRcdGlucHV0LmNsYXNzTGlzdC5yZW1vdmUodGhpcy5faW5wdXRFcnJvckNsYXNzKTtcblx0fVxuXG5cdF9jaGVja0lucHV0VmFsaWRpdHkoaW5wdXQsIGJ1dHRvbikge1xuXHRcdGlmIChpbnB1dC52YWxpZGl0eS52YWxpZCkge1xuXHRcdFx0dGhpcy5faGlkZUVycm9yTWVzc2FnZShpbnB1dCwgYnV0dG9uKTtcblx0XHR9IGVsc2Uge1xuXHRcdFx0dGhpcy5fc2hvd0Vycm9yTWVzc2FnZShpbnB1dCwgYnV0dG9uKTtcblx0XHR9XG5cdH1cblxuXHRfdG9nZ2xlQnV0dG9uU3RhdGUoaW5wdXRzLCBidXR0b24pIHtcblx0XHRjb25zdCBpc1ZhbGlkID0gdGhpcy5faW5wdXRzLmV2ZXJ5KChpbnB1dCkgPT4gaW5wdXQudmFsaWRpdHkudmFsaWQpO1xuXHRcdGlmIChpc1ZhbGlkKSB7XG5cdFx0XHR0aGlzLl9idXR0b24uY2xhc3NMaXN0LnJlbW92ZSh0aGlzLl9pbmFjdGl2ZUJ1dHRvbkNsYXNzKTtcblx0XHRcdHRoaXMuX2J1dHRvbi5kaXNhYmxlZCA9IGZhbHNlO1xuXHRcdH0gZWxzZSB7XG5cdFx0XHR0aGlzLl9idXR0b24uY2xhc3NMaXN0LmFkZCh0aGlzLl9pbmFjdGl2ZUJ1dHRvbkNsYXNzKTtcblx0XHRcdHRoaXMuX2J1dHRvbi5kaXNhYmxlZCA9IHRydWU7XG5cdFx0fVxuXHR9XG5cblx0X3NldEV2ZW50TGlzdGVuZXJzKCkge1xuXHRcdHRoaXMuX2lucHV0cyA9IFsuLi50aGlzLl9mb3JtLnF1ZXJ5U2VsZWN0b3JBbGwodGhpcy5faW5wdXRTZWxlY3RvcildO1xuXHRcdHRoaXMuX2J1dHRvbiA9IHRoaXMuX2Zvcm0ucXVlcnlTZWxlY3Rvcih0aGlzLl9zdWJtaXRCdXR0b25TZWxlY3Rvcik7XG5cdFx0dGhpcy5faW5wdXRzLmZvckVhY2goKGlucHV0KSA9PiB7XG5cdFx0XHRpbnB1dC5hZGRFdmVudExpc3RlbmVyKFwiaW5wdXRcIiwgKCkgPT4ge1xuXHRcdFx0XHQvL0NoZWNrIGlucHV0IHZhbGlkaXR5XG5cdFx0XHRcdHRoaXMuX2NoZWNrSW5wdXRWYWxpZGl0eShpbnB1dCwgdGhpcy5fYnV0dG9uKTtcblx0XHRcdFx0Ly90b2dnbGUgYnV0dG9uIHN0YXRlXG5cdFx0XHRcdHRoaXMuX3RvZ2dsZUJ1dHRvblN0YXRlKHRoaXMuX2lucHV0cywgdGhpcy5fYnV0dG9uKTtcblx0XHRcdH0pO1xuXHRcdH0pO1xuXHR9XG5cblx0ZW5hYmxlVmFsaWRhdGlvbigpIHtcblx0XHR0aGlzLl9mb3JtLmFkZEV2ZW50TGlzdGVuZXIoXCJzdWJtaXRcIiwgKGUpID0+IHtcblx0XHRcdGUucHJldmVudERlZmF1bHQoKTtcblx0XHRcdHRoaXMuX2J1dHRvbi5jbGFzc0xpc3QuYWRkKHRoaXMuX2luYWN0aXZlQnV0dG9uQ2xhc3MpO1xuXHRcdFx0dGhpcy5fYnV0dG9uLmRpc2FibGVkID0gdHJ1ZTtcblx0XHR9KTtcblxuXHRcdHRoaXMuX3NldEV2ZW50TGlzdGVuZXJzKCk7XG5cdH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgRm9ybVZhbGlkYXRvcjtcbiIsIi8qKiBAZm9ybWF0ICovXG5cbi8vKiogQGZvcm1hdCAqL1xuXG5jb25zdCBpbWFnZUVsZW1lbnQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLm1vZGFsX19pbWFnZVwiKTtcbmNvbnN0IGltYWdlQ2FwdGlvbiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIubW9kYWxfX2NhcHRpb25cIik7XG5cbmNvbnN0IG1vZGFsUHJldmlld1dpbmRvdyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIub3ZlcmxheV90eXBlX3ByZXZpZXdcIik7XG5cbmNvbnN0IHRvZ2dsZU1vZGFsID0gKG1vZGFsKSA9PiB7XG5cdG1vZGFsLmNsYXNzTGlzdC50b2dnbGUoXCJvdmVybGF5X3Nob3dcIik7XG5cdGlmIChtb2RhbC5jbGFzc0xpc3QuY29udGFpbnMoXCJvdmVybGF5X3Nob3dcIikpIHtcblx0XHRkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKFwia2V5ZG93blwiLCBoYW5kbGVFc2NLZXkpO1xuXHRcdG1vZGFsLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCBoYW5kbGVPdXRzaWRlQ2xpY2spO1xuXHR9IGVsc2Uge1xuXHRcdGRvY3VtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJrZXlkb3duXCIsIGhhbmRsZUVzY0tleSk7XG5cdFx0bW9kYWwucmVtb3ZlRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIGhhbmRsZU91dHNpZGVDbGljayk7XG5cdH1cbn07XG5cbi8vIGNvbnN0IGhhbmRsZUVzY0tleSA9IChlKSA9PiB7XG4vLyBcdGNvbnN0IGFjdGl2ZU1vZGFsID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5vdmVybGF5X3Nob3dcIik7XG4vLyBcdGlmIChlLmtleSA9PT0gXCJFc2NhcGVcIiAmJiBhY3RpdmVNb2RhbCkge1xuLy8gXHRcdHRvZ2dsZU1vZGFsKGFjdGl2ZU1vZGFsKTtcbi8vIFx0fVxuLy8gfTtcblxuY29uc3QgaGFuZGxlT3V0c2lkZUNsaWNrID0gKGUpID0+IHtcblx0aWYgKGUudGFyZ2V0LmNsYXNzTGlzdC5jb250YWlucyhcIm92ZXJsYXlcIikpIHtcblx0XHR0b2dnbGVNb2RhbChlLnRhcmdldCk7XG5cdH1cbn07XG5cbmNsYXNzIENhcmQge1xuXHRjb25zdHJ1Y3Rvcih7IGRhdGEsIGhhbmRsZUNhcmRDbGljayB9LCBjYXJkU2VsZWN0b3IpIHtcblx0XHR0aGlzLl90ZXh0ID0gZGF0YS5uYW1lO1xuXHRcdHRoaXMuX2xpbmsgPSBkYXRhLmxpbms7XG5cdFx0dGhpcy5fY2FyZFNlbGVjdG9yID0gY2FyZFNlbGVjdG9yO1xuXHRcdHRoaXMuX2hhbmRsZUNhcmRDbGljayA9IGhhbmRsZUNhcmRDbGljaztcblx0XHRjb25zb2xlLmxvZyhoYW5kbGVDYXJkQ2xpY2spO1xuXHR9XG5cblx0X2dldFRlbXBsYXRlKCkge1xuXHRcdGNvbnN0IGNhcmRFbGVtZW50ID0gZG9jdW1lbnQucXVlcnlTZWxlY3Rvcih0aGlzLl9jYXJkU2VsZWN0b3IpLmNvbnRlbnQucXVlcnlTZWxlY3RvcihcIi5waG90by1ncmlkX19jYXJkXCIpLmNsb25lTm9kZSh0cnVlKTtcblxuXHRcdHJldHVybiBjYXJkRWxlbWVudDtcblx0fVxuXG5cdF9zZXRFdmVudExpc3RlbmVycygpIHtcblx0XHRjb25zdCBjYXJkTGlrZSA9IHRoaXMuX2NhcmQucXVlcnlTZWxlY3RvcihcIi5waG90by1ncmlkX19oZWFydFwiKTtcblx0XHRjb25zdCBjYXJkRGVsZXRlID0gdGhpcy5fY2FyZC5xdWVyeVNlbGVjdG9yKFwiLnBob3RvLWdyaWRfX2RlbGV0ZVwiKTtcblx0XHRjb25zdCBjYXJkSW1hZ2UgPSB0aGlzLl9jYXJkLnF1ZXJ5U2VsZWN0b3IoXCIucGhvdG8tZ3JpZF9fcGljdHVyZVwiKTtcblxuXHRcdGNhcmRMaWtlLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB0aGlzLl9oYW5kbGVMaWtlSWNvbigpKTtcblx0XHRjYXJkRGVsZXRlLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB0aGlzLl9oYW5kbGVEZWxldGVJY29uKCkpO1xuXHRcdGNhcmRJbWFnZS5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT5cblx0XHRcdHRoaXMuX2hhbmRsZUNhcmRDbGljayh7XG5cdFx0XHRcdGxpbms6IHRoaXMuX2xpbmssXG5cdFx0XHRcdG5hbWU6IHRoaXMuX25hbWUsXG5cdFx0XHR9KVxuXHRcdCk7XG5cdH1cblxuXHQvLyBfaGFuZGxlUHJldmlld1BpY3R1cmUoKSB7XG5cdC8vIFx0aW1hZ2VFbGVtZW50LnNyYyA9IHRoaXMuX2xpbms7XG5cdC8vIFx0aW1hZ2VFbGVtZW50LmFsdCA9IFwiSW1hZ2VcIiArIHRoaXMuX25hbWUgKyBcIlwiO1xuXHQvLyBcdGltYWdlQ2FwdGlvbi50ZXh0Q29udGVudCA9IHRoaXMuX25hbWU7XG5cdC8vIFx0dG9nZ2xlTW9kYWwobW9kYWxQcmV2aWV3V2luZG93KTtcblx0Ly8gfVxuXG5cdF9oYW5kbGVMaWtlSWNvbiA9ICgpID0+IHtcblx0XHR0aGlzLl9oZWFydC5jbGFzc0xpc3QudG9nZ2xlKFwicGhvdG8tZ3JpZF9faGVhcnRfYWN0aXZlXCIpO1xuXHR9O1xuXG5cdF9oYW5kbGVEZWxldGVJY29uKCkge1xuXHRcdHRoaXMuX2NhcmQucmVtb3ZlKCk7XG5cdH1cblxuXHRfcHJlcGFyZUNhcmQoKSB7XG5cdFx0dGhpcy5fY2FyZC5xdWVyeVNlbGVjdG9yKFwiLnBob3RvLWdyaWRfX3RpdGxlXCIpLnRleHRDb250ZW50ID0gdGhpcy5fbmFtZTtcblx0XHR0aGlzLl9jYXJkLnF1ZXJ5U2VsZWN0b3IoXCIucGhvdG8tZ3JpZF9fcGljdHVyZVwiKS5zcmMgPSB0aGlzLl9saW5rO1xuXHRcdHRoaXMuX2NhcmQuYWx0ID0gXCJJbWFnZVwiICsgdGhpcy5fbmFtZSArIFwiXCI7XG5cdFx0dGhpcy5faGVhcnQgPSB0aGlzLl9jYXJkLnF1ZXJ5U2VsZWN0b3IoXCIucGhvdG8tZ3JpZF9faGVhcnRcIik7XG5cdH1cblxuXHRnZW5lcmF0ZUNhcmQoKSB7XG5cdFx0dGhpcy5fY2FyZCA9IHRoaXMuX2dldFRlbXBsYXRlKCk7XG5cdFx0dGhpcy5fc2V0RXZlbnRMaXN0ZW5lcnMoKTtcblx0XHR0aGlzLl9wcmVwYXJlQ2FyZCgpO1xuXG5cdFx0cmV0dXJuIHRoaXMuX2NhcmQ7XG5cdH1cbn1cbmV4cG9ydCBkZWZhdWx0IENhcmQ7XG4iLCIvKiogQGZvcm1hdCAqL1xuXG4vLyoqIEBmb3JtYXQgKi9cbmNsYXNzIFBvcHVwIHtcblx0Y29uc3RydWN0b3IocG9wdXBTZWxlY3Rvcikge1xuXHRcdC8vIGNvbnN0IHBvcHVwU2VsZWN0b3IgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKFwiLm1vZGFsXCIpO1xuXHRcdHRoaXMuX3BvcHVwRWxlbWVudCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IocG9wdXBTZWxlY3Rvcik7XG5cdH1cblx0X2hhbmRsZUVzY0tleSA9IChlKSA9PiB7XG5cdFx0Ly8gY29uc3QgYWN0aXZlTW9kYWwgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLm92ZXJsYXlfc2hvd1wiKTtcblx0XHQvLyBpZiAoZS5rZXkgPT09IFwiRXNjYXBlXCIgJiYgYWN0aXZlTW9kYWwpIHtcblx0XHQvLyAgICAgdG9nZ2xlTW9kYWwoYWN0aXZlTW9kYWwpOyAvL2Nsb3NlIGZ1bmN0aW9uXG5cdFx0ZS5wcmV2ZW50RGVmYXVsdCgpO1xuXHRcdGlmIChlLmtleSA9PT0gXCJFc2NhcGVcIikgdGhpcy5jbG9zZSgpO1xuXHR9O1xuXG5cdF9oYW5kbGVPdXRzaWRlQ2xpY2sgPSAoZSkgPT4ge1xuXHRcdC8vIGlmIChlLnRhcmdldC5jbGFzc0xpc3QuY29udGFpbnMoXCJvdmVybGF5XCIpKVxuXHRcdC8vICAgICB0b2dnbGVNb2RhbChlLnRhcmdldCk7IC8vY2xvc2UgZnVuY3Rpb25cblx0XHR0aGlzLmNsb3NlKCk7XG5cdH07XG5cdG9wZW4oKSB7XG5cdFx0dGhpcy5fcG9wdXBFbGVtZW50LmNsYXNzTGlzdC5hZGQoXCJvdmVybGF5X3Nob3dcIik7XG5cdFx0aWYgKHRoaXMuX3BvcHVwRWxlbWVudC5jbGFzc0xpc3QuY29udGFpbnMoXCJvdmVybGF5X3Nob3dcIikpIHtcblx0XHRcdGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoXCJrZXlkb3duXCIsICgpID0+IHtcblx0XHRcdFx0dGhpcy5faGFuZGxlRXNjS2V5KCk7XG5cdFx0XHR9KTtcblx0XHRcdHRoaXMuX3BvcHVwRWxlbWVudC5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xuXHRcdFx0XHR0aGlzLl9oYW5kbGVPdXRzaWRlQ2xpY2soKTtcblx0XHRcdH0pO1xuXHRcdH1cblx0fVxuXG5cdGNsb3NlKCkge1xuXHRcdHRoaXMuX3BvcHVwRWxlbWVudC5jbGFzc0xpc3QucmVtb3ZlKFwib3ZlcmxheV9zaG93XCIpO1xuXHRcdGRvY3VtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJrZXlkb3duXCIsIHRoaXMuX2hhbmRsZUVzY0tleSk7XG5cdFx0bW9kYWwucmVtb3ZlRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIHRoaXMuX2hhbmRsZU91dHNpZGVDbGljayk7XG5cdH1cblxuXHRzZXRFdmVudExpc3RlbmVycygpIHtcblx0XHRjb25zdCBwcm9maWxlQ2xvc2UgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLm1vZGFsX19jbG9zZS1idXR0b25cIik7XG5cdFx0dGhpcy5fcG9wdXBFbGVtZW50LmNsYXNzTGlzdC5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKGUpID0+IHtcblx0XHRcdGlmIChlLnRhcmdldC5jbGFzc0xpc3QuY29udGFpbnMoXCJvdmVybGF5X3Nob3dcIikgfHwgZS50YXJnZXQuY2xhc3NMaXN0LmNvbnRhaW5zKHByb2ZpbGVDbG9zZSkpIHtcblx0XHRcdFx0dGhpcy5jbG9zZSgpO1xuXHRcdFx0fVxuXHRcdH0pO1xuXHR9XG59XG5leHBvcnQgZGVmYXVsdCBQb3B1cDtcbiIsIi8qKiBAZm9ybWF0ICovXG5cbi8vKiogQGZvcm1hdCAqL1xuXG5pbXBvcnQgUG9wdXAgZnJvbSBcIi4vUG9wdXBcIjtcblxuY2xhc3MgUG9wdXBXaXRoRm9ybSBleHRlbmRzIFBvcHVwIHtcblx0Y29uc3RydWN0b3Ioc3VibWl0Rm9ybSwgcG9wdXBTZWxlY3Rvcikge1xuXHRcdHN1cGVyKHBvcHVwU2VsZWN0b3IpO1xuXHRcdHRoaXMuX3N1Ym1pdEZvcm0gPSBzdWJtaXRGb3JtO1xuXHRcdHRoaXMuX3BvcHVwRm9ybSA9IHRoaXMuX3BvcHVwRWxlbWVudC5xdWVyeVNlbGVjdG9yKFwiLmZvcm0tcHJvZmlsZVwiKTtcblx0fVxuXG5cdF9nZXRJbnB1dFZhbHVlcygpIHtcblx0XHR0aGlzLl9pbnB1dFNvdXJjZSA9IHRoaXMuX3BvcHVwRm9ybS5xdWVyeVNlbGVjdG9yQWxsKFwiLm1vZGFsX19mb3JtLWNvbnRyb2wtaW5wdXRcIik7XG5cdFx0cHJvZmlsZU5hbWUudGV4dENvbnRlbnQgPSBuYW1lSW5wdXQudmFsdWU7XG5cdFx0cHJvZmlsZVRpdGxlLnRleHRDb250ZW50ID0gdGl0bGVJbnB1dC52YWx1ZTtcblx0XHR0aGlzLl9pbnB1dFZhbHVlcyA9IHt9O1xuXHRcdHRoaXMuX2lucHV0U291cmNlLmZvckVhY2goKGlucHV0KSA9PiAodGhpcy5faW5wdXRWYWx1ZXNbbmFtZUlucHV0Lm5hbWVdID0gbmFtZUlucHV0LnZhbHVlKSk7XG5cdFx0cmV0dXJuIHRoaXMuX2lucHV0VmFsdWVzO1xuXHR9XG5cblx0c2V0RXZlbnRMaXN0ZW5lcnMoKSB7XG5cdFx0c3VwZXIuc2V0RXZlbnRMaXN0ZW5lcnMoKTtcblx0XHR0aGlzLl9wb3B1cFNlbGVjdG9yLmFkZEV2ZW50TGlzdGVuZXIoXCJzdWJtaXRcIiwgKGUpID0+IHtcblx0XHRcdGUucHJldmVudERlZmF1bHQoKTtcblx0XHRcdHRoaXMuX3N1Ym1pdEZvcm0odGhpcy5fZ2V0SW5wdXRWYWx1ZXMoKSk7XG5cdFx0XHR0b2dnbGVNb2RhbChvdmVybGF5KTtcblx0XHR9KTtcblx0fVxuXG5cdGNsb3NlKCkge1xuXHRcdHRoaXMuX3BvcHVwRm9ybS5yZXNldCgpO1xuXHRcdHN1cGVyLmNsb3NlKCk7XG5cdFx0Ly9yZXNldFxuXHR9XG59XG5leHBvcnQgZGVmYXVsdCBQb3B1cFdpdGhGb3JtO1xuIiwiLyoqIEBmb3JtYXQgKi9cblxuLy8qKiBAZm9ybWF0ICovXG5cbmltcG9ydCBQb3B1cCBmcm9tIFwiLi9Qb3B1cC5qc1wiO1xuXG5jbGFzcyBQb3B1cFdpdGhJbWFnZSBleHRlbmRzIFBvcHVwIHtcblx0Y29uc3RydWN0b3IoUG9wdXBTZWxlY3Rvcikge1xuXHRcdHN1cGVyKFBvcHVwU2VsZWN0b3IpO1xuXHR9XG5cblx0b3Blbih7IGxpbmssIG5hbWUgfSkge1xuXHRcdC8vZ2V0IG5hbWUgYW5kIGxpbmsgZnJvbSBtb2RlbCBmb3JtXG5cdFx0dGhpcy5fcG9wdXBFbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXCIubW9kYWxfX2NhcHRpb25cIikudGV4dGNvbnRlbnQgPSBuYW1lO1xuXHRcdGNvbnN0IGltYWdlID0gdGhpcy5fcG9wdXBFbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXCIubW9kYWxfX2ltYWdlXCIpO1xuXHRcdGltYWdlLnNyYyA9IGxpbms7XG5cdFx0aW1hZ2UuYWx0ID0gYE1hZ25pZmljZW50IGFydGlzdCBpbnRlcnByZXRhdGlvbiBvZiAke25hbWV9YDtcblx0XHQvL2NhbGwgb3BlbiBmdW5jdGlvbiBmcm9tIHBhcmVudCBjbGFzcyB3aXRoIHN1cGVyXG5cdFx0c3VwZXIub3BlbigpO1xuXHR9XG59XG5cbmV4cG9ydCBkZWZhdWx0IFBvcHVwV2l0aEltYWdlO1xuIiwiLyoqIEBmb3JtYXQgKi9cblxuLy8qKiBAZm9ybWF0ICovXG5cbmNsYXNzIFNlY3Rpb24ge1xuXHRjb25zdHJ1Y3Rvcih7IGl0ZW1zLCByZW5kZXJlciB9LCBjYXJkQ29udGFpbmVyKSB7XG5cdFx0dGhpcy5yZW5kZXJlciA9IHJlbmRlcmVyO1xuXHRcdHRoaXMuaXRlbXMgPSBpdGVtcztcblx0XHR0aGlzLmNhcmRDb250YWluZXIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKGNhcmRDb250YWluZXIpO1xuXHR9XG5cblx0cmVuZGVyU2VjdGlvbigpIHtcblx0XHQvL3JlbmRlciBlYWNoIGVsZW1lbnQgb24gcGFnZVxuXHRcdHRoaXMuaXRlbXMuZm9yRWFjaCgoaXRlbSkgPT4ge1xuXHRcdFx0dGhpcy5yZW5kZXJlcihpdGVtKTtcblx0XHR9KTtcblx0fVxuXG5cdGFkZEl0ZW0oY2FyZCkge1xuXHRcdC8vdGFrZXMgRE9NIGVsZW1lbnQgYW5kIGFkZHMgaXQgdG8gdGhlIGNvbnRhaW5lclxuXHRcdHRoaXMuY2FyZENvbnRhaW5lci5wcmVwZW5kKGNhcmQpO1xuXHR9XG59XG5cbmV4cG9ydCBkZWZhdWx0IFNlY3Rpb247XG4iLCIvKiogQGZvcm1hdCAqL1xuXG4vLyoqIEBmb3JtYXQgKi9cbmltcG9ydCBcIi4vaW5kZXguY3NzXCI7XG5pbXBvcnQgRm9ybVZhbGlkYXRvciBmcm9tIFwiLi91dGlscy9Gb3JtVmFsaWRhdG9yXCI7XG5pbXBvcnQgQ2FyZCBmcm9tIFwiLi9jb21wb25lbnRzL0NhcmQuanNcIjtcbi8vaW1wb3J0IFwiLi4vaW1hZ2VzL2F2YXRhci5qcGdcIjtcbmltcG9ydCBQb3B1cCBmcm9tIFwiLi9jb21wb25lbnRzL1BvcHVwLmpzXCI7XG5pbXBvcnQgUG9wdXBXaXRoRm9ybSBmcm9tIFwiLi9jb21wb25lbnRzL1BvcHVwV2l0aEZvcm0uanNcIjtcbmltcG9ydCBQb3B1cFdpdGhJbWFnZSBmcm9tIFwiLi9jb21wb25lbnRzL1BvcHVwV2l0aEltYWdlLmpzXCI7XG5pbXBvcnQgU2VjdGlvbiBmcm9tIFwiLi91dGlscy9TZWN0aW9uLmpzXCI7XG5pbXBvcnQgVXNlckluZm8gZnJvbSBcIi4vY29tcG9uZW50cy9Vc2VySW5mb1wiO1xuXG5jb25zdCBlZGl0QnV0dG9uID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNlZGl0QnV0dG9uXCIpO1xuY29uc3QgcGhvdG9Nb2RhbEJ1dHRvbiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjYWRkUGhvdG9cIik7XG5jb25zdCBtb2RhbFByb2ZpbGUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLm1vZGFsX2VkaXRfcHJvZmlsZVwiKTtcbmNvbnN0IGVkaXRGb3JtRWxlbWVudCA9IG1vZGFsUHJvZmlsZS5xdWVyeVNlbGVjdG9yKFwiLmZvcm0tcHJvZmlsZVwiKTtcblxuY29uc3QgcHJvZmlsZU5hbWUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnByb2ZpbGVfX25hbWVcIik7XG5jb25zdCBwcm9maWxlVGl0bGUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnByb2ZpbGVfX2pvYlwiKTtcblxuY29uc3QgbmFtZUlucHV0ID0gZG9jdW1lbnQuZm9ybXMucHJvZmlsZS5lbGVtZW50cy5uYW1lO1xuY29uc3QgdGl0bGVJbnB1dCA9IGRvY3VtZW50LmZvcm1zLnByb2ZpbGUuZWxlbWVudHMudGl0bGU7XG5cbmNvbnN0IG92ZXJsYXkgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLm92ZXJsYXlfdHlwZV9lZGl0XCIpO1xuXG5jb25zdCBwcm9maWxlQ2xvc2UgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLm1vZGFsX19jbG9zZS1idXR0b25cIik7XG5jb25zdCBhZGRQaG90b0Nsb3NlID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5tb2RhbF9fY2xvc2UtYnV0dG9uX2FkZC1waG90b1wiKTtcbmNvbnN0IGltZ1ByZXZpZXdDbG9zZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIubW9kYWxfX2Nsb3NlLWJ1dHRvbl9pbWFnZVwiKTtcblxuY29uc3QgbW9kYWwgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLm1vZGFsXCIpO1xuY29uc3QgY2FyZEZvcm1FbGVtZW50ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5mb3JtX2FkZFwiKTtcblxuY29uc3QgdG9nZ2xlTW9kYWwgPSAobW9kYWwpID0+IHtcblx0bW9kYWwuY2xhc3NMaXN0LnRvZ2dsZShcIm92ZXJsYXlfc2hvd1wiKTtcblx0aWYgKG1vZGFsLmNsYXNzTGlzdC5jb250YWlucyhcIm92ZXJsYXlfc2hvd1wiKSkge1xuXHRcdGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoXCJrZXlkb3duXCIsIGhhbmRsZUVzY0tleSk7XG5cdFx0bW9kYWwuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIGhhbmRsZU91dHNpZGVDbGljayk7XG5cdH0gZWxzZSB7XG5cdFx0ZG9jdW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcihcImtleWRvd25cIiwgaGFuZGxlRXNjS2V5KTtcblx0XHRtb2RhbC5yZW1vdmVFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgaGFuZGxlT3V0c2lkZUNsaWNrKTtcblx0fVxufTtcblxuY29uc3QgaGFuZGxlT3V0c2lkZUNsaWNrID0gKGUpID0+IHtcblx0aWYgKGUudGFyZ2V0LmNsYXNzTGlzdC5jb250YWlucyhcIm92ZXJsYXlcIikpIHtcblx0XHR0b2dnbGVNb2RhbChlLnRhcmdldCk7XG5cdH1cbn07XG4vL2NvbnN0IGhhbmRsZUVzY0tleSA9IChlKSA9PiB7XG4vLyBcdGNvbnN0IGFjdGl2ZU1vZGFsID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5vdmVybGF5X3Nob3dcIik7XG4vLyBcdGlmIChlLmtleSA9PT0gXCJFc2NhcGVcIiAmJiBhY3RpdmVNb2RhbCkge1xuLy8gXHRcdHRvZ2dsZU1vZGFsKGFjdGl2ZU1vZGFsKTtcbi8vIFx0fVxuLy8gfTtcblxuY29uc3QgbW9kYWxFZGl0V2luZG93ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5vdmVybGF5X3R5cGVfZWRpdFwiKTtcbmNvbnN0IG1vZGFsQWRkV2luZG93ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5vdmVybGF5X3R5cGVfYWRkXCIpO1xuY29uc3QgbW9kYWxQcmV2aWV3V2luZG93ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5vdmVybGF5X3R5cGVfcHJldmlld1wiKTtcblxuZWRpdEJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xuXHRuYW1lSW5wdXQudmFsdWUgPSBwcm9maWxlTmFtZS50ZXh0Q29udGVudDtcblx0dGl0bGVJbnB1dC52YWx1ZSA9IHByb2ZpbGVUaXRsZS50ZXh0Q29udGVudDtcblx0dG9nZ2xlTW9kYWwobW9kYWxFZGl0V2luZG93KTtcbn0pO1xuXG5waG90b01vZGFsQnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XG5cdHRvZ2dsZU1vZGFsKG1vZGFsQWRkV2luZG93KTtcblx0ZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJuZXdQaWN0dXJlXCIpLnJlc2V0KCk7XG59KTtcblxuLy8gcHJvZmlsZUNsb3NlLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XG4vLyBcdHRvZ2dsZU1vZGFsKG1vZGFsRWRpdFdpbmRvdyk7XG4vLyB9KTtcblxuaW1nUHJldmlld0Nsb3NlLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XG5cdHRvZ2dsZU1vZGFsKG1vZGFsUHJldmlld1dpbmRvdyk7XG59KTtcblxuY29uc3QgZm9ybVByb2ZpbGUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLmZvcm0tcHJvZmlsZVwiKTtcbmZvcm1Qcm9maWxlLmFkZEV2ZW50TGlzdGVuZXIoXCJzdWJtaXRcIiwgKGUpID0+IHtcblx0ZS5wcmV2ZW50RGVmYXVsdCgpO1xuXHRwcm9maWxlTmFtZS50ZXh0Q29udGVudCA9IG5hbWVJbnB1dC52YWx1ZTtcblx0cHJvZmlsZVRpdGxlLnRleHRDb250ZW50ID0gdGl0bGVJbnB1dC52YWx1ZTtcblx0dG9nZ2xlTW9kYWwob3ZlcmxheSk7XG59KTtcblxuYWRkUGhvdG9DbG9zZS5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xuXHR0b2dnbGVNb2RhbChtb2RhbEFkZFdpbmRvdyk7XG59KTtcblxuY29uc3QgYWRkUGljdHVyZUZvcm0gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLmZvcm1fYWRkXCIpO1xuY29uc3QgcGljdHVyZVRpdGxlSW5wdXQgPSBkb2N1bWVudC5mb3Jtcy5uZXdQaWN0dXJlLmVsZW1lbnRzLm5hbWVPZlBsYWNlO1xuY29uc3QgcGljdHVyZUxpbmtJbnB1dCA9IGRvY3VtZW50LmZvcm1zLm5ld1BpY3R1cmUuZWxlbWVudHMubGlua09mUGxhY2U7XG5jb25zdCBjYXJkU2VsZWN0b3IgPSBcIi5jYXJkLXRlbXBsYXRlXCI7XG5cbmFkZFBpY3R1cmVGb3JtLmFkZEV2ZW50TGlzdGVuZXIoXCJzdWJtaXRcIiwgKGUpID0+IHtcblx0ZS5wcmV2ZW50RGVmYXVsdCgpO1xuXHRjb25zdCB1c2VyQ2FyZCA9IHtcblx0XHRuYW1lOiBwaWN0dXJlVGl0bGVJbnB1dC52YWx1ZSxcblx0XHRsaW5rOiBwaWN0dXJlTGlua0lucHV0LnZhbHVlLFxuXHR9O1xuXG5cdHJlbmRlckNhcmQodXNlckNhcmQpO1xuXHR0b2dnbGVNb2RhbChtb2RhbEFkZFdpbmRvdyk7XG59KTtcblxuY29uc3QgaW5pdGlhbENhcmRzID0gW1xuXHR7XG5cdFx0bmFtZTogXCJTaWxpY29uIFZhbGxleVwiLFxuXHRcdGxpbms6IFwiaHR0cHM6Ly9pbWFnZXMudW5zcGxhc2guY29tL3Bob3RvLTE2MjE2NDY5MTIzMjEtYzk3YTIzMzcwMWQyP2l4aWQ9TW53eE1qQTNmREI4TUh4d2FHOTBieTF3WVdkbGZIeDhmR1Z1ZkRCOGZIeDgmaXhsaWI9cmItMS4yLjEmYXV0bz1mb3JtYXQmZml0PWNyb3Amdz03MTYmcT04MFwiLFxuXHR9LFxuXHR7XG5cdFx0bmFtZTogXCJNaWFtaSBCZWFjaFwiLFxuXHRcdGxpbms6IFwiaHR0cHM6Ly9pbWFnZXMudW5zcGxhc2guY29tL3Bob3RvLTE2MjI5NDI4MTc0NTQtZWQ2MTZlOGQzYTJkP2l4aWQ9TW53eE1qQTNmREI4TUh4MmFYTjFZV3d0YzJWaGNtTm9mREY4Zkh4bGJud3dmSHg4ZkElM0QlM0QmaXhsaWI9cmItMS4yLjEmYXV0bz1mb3JtYXQmZml0PWNyb3Amdz04MDAmcT02MFwiLFxuXHR9LFxuXHR7XG5cdFx0bmFtZTogXCJMYW5kIG9mIEZpcmUgJiBJY2VcIixcblx0XHRsaW5rOiBcImh0dHBzOi8vaW1hZ2VzLnVuc3BsYXNoLmNvbS9waG90by0xNjIwMDUzNTUzMTU2LTkyZTE1ZDU0ZjdlZT9peGlkPU1ud3hNakEzZkRCOE1IeHpaV0Z5WTJoOE9YeDhlV1ZzYkc5M0pUSXdabXhoYldVbE1qQmliSFZsSlRJd2MyMXZhMlY4Wlc1OE1IeDhNSHg4Jml4bGliPXJiLTEuMi4xJmF1dG89Zm9ybWF0JmZpdD1jcm9wJnc9ODAwJnE9NjBcIixcblx0fSxcblx0e1xuXHRcdG5hbWU6IFwiTmVvbiBSYWluXCIsXG5cdFx0bGluazogXCJodHRwczovL2ltYWdlcy51bnNwbGFzaC5jb20vcGhvdG8tMTYyMTg3MDYxNjMxOS1lZWI3ZmRmMzEyMzQ/aXhpZD1Nbnd4TWpBM2ZEQjhNSHgyYVhOMVlXd3RjMlZoY21Ob2ZERjhmSHhsYm53d2ZIeDhmQSUzRCUzRCZpeGxpYj1yYi0xLjIuMSZhdXRvPWZvcm1hdCZmaXQ9Y3JvcCZ3PTgwMCZxPTYwXCIsXG5cdH0sXG5cdHtcblx0XHRuYW1lOiBcIkZhc2hpb24gQ2FwaXRhbFwiLFxuXHRcdGxpbms6IFwiaHR0cHM6Ly9pbWFnZXMudW5zcGxhc2guY29tL3Bob3RvLTE2MTgyNDU2MTM5MDEtZTUyYjdlMDEyM2M3P2l4aWQ9TW53eE1qQTNmREI4TUh4d2NtOW1hV3hsTFhCaFoyVjhNVGw4Zkh4bGJud3dmSHg4ZkElM0QlM0QmaXhsaWI9cmItMS4yLjEmYXV0bz1mb3JtYXQmZml0PWNyb3Amdz04MDAmcT02MFwiLFxuXHR9LFxuXHR7XG5cdFx0bmFtZTogXCJDYXBlIENhbmF2ZXJhbFwiLFxuXHRcdGxpbms6IFwiaHR0cHM6Ly9pbWFnZXMudW5zcGxhc2guY29tL3Bob3RvLTE1MzA0NDc5MjAxODQtYjg4Yzg4NzI/aXhpZD1Nbnd4TWpBM2ZEQjhNSHgyYVhOMVlXd3RjMlZoY21Ob2ZERjhmSHhsYm53d2ZIeDhmQSUzRCUzRCZpeGxpYj1yYi0xLjIuMSZhdXRvPWZvcm1hdCZmaXQ9Y3JvcCZ3PTgwMCZxPTYwXCIsXG5cdH0sXG5dO1xuXG5jb25zdCBwaG90b0dyaWQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnBob3RvLWdyaWRcIik7XG5cbi8vIGNvbnN0IHVzZXJJbmZvID0gbmV3IHVzZXJJbmZvKHtcbi8vIFx0dXNlcm5hbWVTZWxlY3RvcjogcHJvZmlsZUNvbmZpZy5wcm9maWxlVGl0bGUsXG4vLyBcdHVzZXJEZXNjcmlwdGlvblNlbGVjdG9yOiBwcm9maWxlQ29uZmlnLnByb2ZpbGVEZXNjcmlwdGlvblxuLy8gfSlcbmNvbnN0IGhhbmRsZUNhcmRDbGljayA9IChkYXRhKSA9PiB7XG5cdGltYWdlUG9wdXAub3Blbih7XG5cdFx0bmFtZTogZGF0YS5uYW1lLFxuXHRcdGxpbms6IGRhdGEubGluayxcblx0fSk7XG59O1xuXG5jb25zdCBzdWJtaXRGb3JtID0gKGl0ZW0pID0+IHtcblx0cG9wdXBGb3JtLm9wZW4oe1xuXHRcdG5hbWVJbnB1dDogaW5wdXQubmFtZSxcblx0XHR0aXRsZUlucHV0OiBpbnB1dC50aXRsZSxcblx0fSk7XG59O1xuXG5jb25zdCBzZWN0aW9uID0gbmV3IFNlY3Rpb24oe1xuXHRyZW5kZXJlcjogKGRhdGEpID0+IHtcblx0XHRjb25zb2xlLmxvZyhcInJlbmRlcmVyXCIsIGRhdGEpO1xuXHRcdGNvbnN0IGNhcmQgPSBuZXcgQ2FyZChcblx0XHRcdHtcblx0XHRcdFx0ZGF0YSxcblx0XHRcdFx0aGFuZGxlQ2FyZENsaWNrLFxuXHRcdFx0fSxcblx0XHRcdGNhcmRTZWxlY3RvclxuXHRcdCk7XG5cdFx0cGhvdG9HcmlkLnByZXBlbmQoY2FyZC5nZW5lcmF0ZUNhcmQoKSk7XG5cdFx0KFwiLmNhcmQtdGVtcGxhdGVcIik7XG5cdH0sXG59KTtcblxuY29uc3QgcmVuZGVyQ2FyZCA9IChkYXRhKSA9PiB7XG5cdGNvbnN0IGNhcmQgPSBuZXcgQ2FyZCh7IGRhdGEsIGhhbmRsZUNhcmRDbGljayB9LCBjYXJkU2VsZWN0b3IpO1xuXHRwaG90b0dyaWQucHJlcGVuZChjYXJkLmdlbmVyYXRlQ2FyZCgpKTtcbn07XG5cbmluaXRpYWxDYXJkcy5mb3JFYWNoKChjYXJkKSA9PiB7XG5cdHJlbmRlckNhcmQoY2FyZCk7XG59KTtcblxuLy8gY29uc3QgcG9wdXAgPSBuZXcgUG9wdXAocG9wdXBTZWxlY3Rvcik7XG4vLyBwb3B1cC5zZXRFdmVudExpc3RlbmVycygpO1xuY29uc3QgcG9wdXBTZWxlY3RvciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoXCIubW9kYWxcIik7XG5cbi8vIHsgc3VibWl0Rm9ybSAgPSAoaW5wdXQpID0+IHsgZm9ybVByb2ZpbGUoaW5wdXQpIH0gfVxuY29uc3QgcG9wdXBGb3JtID0gbmV3IFBvcHVwV2l0aEZvcm0oc3VibWl0Rm9ybSwgcG9wdXBTZWxlY3Rvcik7XG5wb3B1cEZvcm0uc2V0RXZlbnRMaXN0ZW5lcnMoKTtcblxuY29uc3QgaW1hZ2VQb3B1cCA9IG5ldyBQb3B1cFdpdGhJbWFnZShwb3B1cFNlbGVjdG9yKTtcbmltYWdlUG9wdXAuc2V0RXZlbnRMaXN0ZW5lcnMoKTtcblxuLy8gY29uc3QgdXNlckluZm8gPSBuZXcgVXNlckluZm8obmFtZVNlbGVjdG9yLCB0aXRsZVNlbGVjdG9yKTtcblxuY29uc3QgY29uZmlnID0ge1xuXHRpbnB1dFNlbGVjdG9yOiBcIi5tb2RhbF9fZm9ybS1jb250cm9sLWlucHV0XCIsXG5cdHN1Ym1pdEJ1dHRvblNlbGVjdG9yOiBcIi5idXR0b25cIixcblx0aW5hY3RpdmVCdXR0b25DbGFzczogXCJidXR0b25fZGlzYWJsZWRcIixcblx0aW5wdXRFcnJvckNsYXNzOiBcIm1vZGFsX19mb3JtLWNvbnRyb2wtaW5wdXQtZXJyb3JcIixcblx0ZXJyb3JDbGFzczogXCJwb3B1cC1lcnJvclwiLFxufTtcblxuY29uc3QgZWRpdEZvcm1WYWxpZGF0b3IgPSBuZXcgRm9ybVZhbGlkYXRvcihjb25maWcsIGVkaXRGb3JtRWxlbWVudCk7XG5jb25zdCBjYXJkRm9ybVZhbGlkYXRvciA9IG5ldyBGb3JtVmFsaWRhdG9yKGNvbmZpZywgY2FyZEZvcm1FbGVtZW50KTtcblxuZWRpdEZvcm1WYWxpZGF0b3IuZW5hYmxlVmFsaWRhdGlvbigpO1xuY2FyZEZvcm1WYWxpZGF0b3IuZW5hYmxlVmFsaWRhdGlvbigpO1xuIl0sIm5hbWVzIjpbIkZvcm1WYWxpZGF0b3IiLCJjb25maWciLCJmb3JtRWxlbWVudCIsInRoaXMiLCJfaW5wdXRTZWxlY3RvciIsImlucHV0U2VsZWN0b3IiLCJfc3VibWl0QnV0dG9uU2VsZWN0b3IiLCJzdWJtaXRCdXR0b25TZWxlY3RvciIsIl9pbmFjdGl2ZUJ1dHRvbkNsYXNzIiwiaW5hY3RpdmVCdXR0b25DbGFzcyIsIl9pbnB1dEVycm9yQ2xhc3MiLCJpbnB1dEVycm9yQ2xhc3MiLCJfZXJyb3JDbGFzcyIsImVycm9yQ2xhc3MiLCJfZm9ybSIsImNvbnNvbGUiLCJsb2ciLCJpbnB1dCIsImVycm9yIiwicXVlcnlTZWxlY3RvciIsImlkIiwidGV4dENvbnRlbnQiLCJ2YWxpZGF0aW9uTWVzc2FnZSIsImNsYXNzTGlzdCIsImFkZCIsInJlbW92ZSIsImJ1dHRvbiIsInZhbGlkaXR5IiwidmFsaWQiLCJfaGlkZUVycm9yTWVzc2FnZSIsIl9zaG93RXJyb3JNZXNzYWdlIiwiaW5wdXRzIiwiX2lucHV0cyIsImV2ZXJ5IiwiX2J1dHRvbiIsImRpc2FibGVkIiwicXVlcnlTZWxlY3RvckFsbCIsImZvckVhY2giLCJhZGRFdmVudExpc3RlbmVyIiwiX2NoZWNrSW5wdXRWYWxpZGl0eSIsIl90b2dnbGVCdXR0b25TdGF0ZSIsImUiLCJwcmV2ZW50RGVmYXVsdCIsIl9zZXRFdmVudExpc3RlbmVycyIsImRvY3VtZW50IiwiQ2FyZCIsImNhcmRTZWxlY3RvciIsImRhdGEiLCJoYW5kbGVDYXJkQ2xpY2siLCJfaGVhcnQiLCJ0b2dnbGUiLCJfdGV4dCIsIm5hbWUiLCJfbGluayIsImxpbmsiLCJfY2FyZFNlbGVjdG9yIiwiX2hhbmRsZUNhcmRDbGljayIsImNvbnRlbnQiLCJjbG9uZU5vZGUiLCJjYXJkTGlrZSIsIl9jYXJkIiwiY2FyZERlbGV0ZSIsImNhcmRJbWFnZSIsIl9oYW5kbGVMaWtlSWNvbiIsIl9oYW5kbGVEZWxldGVJY29uIiwiX25hbWUiLCJzcmMiLCJhbHQiLCJfZ2V0VGVtcGxhdGUiLCJfcHJlcGFyZUNhcmQiLCJQb3B1cCIsInBvcHVwU2VsZWN0b3IiLCJrZXkiLCJjbG9zZSIsIl9wb3B1cEVsZW1lbnQiLCJjb250YWlucyIsIl9oYW5kbGVFc2NLZXkiLCJfaGFuZGxlT3V0c2lkZUNsaWNrIiwicmVtb3ZlRXZlbnRMaXN0ZW5lciIsIm1vZGFsIiwicHJvZmlsZUNsb3NlIiwidGFyZ2V0IiwiUG9wdXBXaXRoRm9ybSIsInN1Ym1pdEZvcm0iLCJfc3VibWl0Rm9ybSIsIl9wb3B1cEZvcm0iLCJfaW5wdXRTb3VyY2UiLCJwcm9maWxlTmFtZSIsIm5hbWVJbnB1dCIsInZhbHVlIiwicHJvZmlsZVRpdGxlIiwidGl0bGVJbnB1dCIsIl9pbnB1dFZhbHVlcyIsIl9wb3B1cFNlbGVjdG9yIiwiX2dldElucHV0VmFsdWVzIiwidG9nZ2xlTW9kYWwiLCJvdmVybGF5IiwicmVzZXQiLCJQb3B1cFdpdGhJbWFnZSIsIlBvcHVwU2VsZWN0b3IiLCJ0ZXh0Y29udGVudCIsImltYWdlIiwiU2VjdGlvbiIsImNhcmRDb250YWluZXIiLCJpdGVtcyIsInJlbmRlcmVyIiwiaXRlbSIsImNhcmQiLCJwcmVwZW5kIiwiZWRpdEJ1dHRvbiIsInBob3RvTW9kYWxCdXR0b24iLCJlZGl0Rm9ybUVsZW1lbnQiLCJmb3JtcyIsInByb2ZpbGUiLCJlbGVtZW50cyIsInRpdGxlIiwiYWRkUGhvdG9DbG9zZSIsImltZ1ByZXZpZXdDbG9zZSIsImNhcmRGb3JtRWxlbWVudCIsImhhbmRsZUVzY0tleSIsImhhbmRsZU91dHNpZGVDbGljayIsIm1vZGFsRWRpdFdpbmRvdyIsIm1vZGFsQWRkV2luZG93IiwibW9kYWxQcmV2aWV3V2luZG93IiwiZ2V0RWxlbWVudEJ5SWQiLCJhZGRQaWN0dXJlRm9ybSIsInBpY3R1cmVUaXRsZUlucHV0IiwibmV3UGljdHVyZSIsIm5hbWVPZlBsYWNlIiwicGljdHVyZUxpbmtJbnB1dCIsImxpbmtPZlBsYWNlIiwidXNlckNhcmQiLCJyZW5kZXJDYXJkIiwicGhvdG9HcmlkIiwiaW1hZ2VQb3B1cCIsIm9wZW4iLCJnZW5lcmF0ZUNhcmQiLCJwb3B1cEZvcm0iLCJzZXRFdmVudExpc3RlbmVycyIsImVkaXRGb3JtVmFsaWRhdG9yIiwiY2FyZEZvcm1WYWxpZGF0b3IiLCJlbmFibGVWYWxpZGF0aW9uIl0sInNvdXJjZVJvb3QiOiIifQ==