!function(){"use strict";function e(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}function t(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var n=function(){function n(e,t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,n),this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._form=t,console.log(t)}var r,o;return r=n,(o=[{key:"_showErrorMessage",value:function(e){var t=this._form.querySelector("#".concat(e.id,"-error"));t.textContent=e.validationMessage,t.classList.add(this._errorClass),e.classList.add(this._inputErrorClass)}},{key:"_hideErrorMessage",value:function(e){var t=this._form.querySelector("#".concat(e.id,"-error"));t.textContent="",t.classList.remove(this._errorClass),e.classList.remove(this._inputErrorClass)}},{key:"_checkInputValidity",value:function(e,t){e.validity.valid?this._hideErrorMessage(e,t):this._showErrorMessage(e,t)}},{key:"_toggleButtonState",value:function(e,t){this._inputs.every((function(e){return e.validity.valid}))?(this._button.classList.remove(this._inactiveButtonClass),this._button.disabled=!1):(this._button.classList.add(this._inactiveButtonClass),this._button.disabled=!0)}},{key:"_setEventListeners",value:function(){var t,n=this;this._inputs=function(t){if(Array.isArray(t))return e(t)}(t=this._form.querySelectorAll(this._inputSelector))||function(e){if("undefined"!=typeof Symbol&&null!=e[Symbol.iterator]||null!=e["@@iterator"])return Array.from(e)}(t)||function(t,n){if(t){if("string"==typeof t)return e(t,n);var r=Object.prototype.toString.call(t).slice(8,-1);return"Object"===r&&t.constructor&&(r=t.constructor.name),"Map"===r||"Set"===r?Array.from(t):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?e(t,n):void 0}}(t)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}(),this._button=this._form.querySelector(this._submitButtonSelector),this._inputs.forEach((function(e){e.addEventListener("input",(function(){n._checkInputValidity(e,n._button),n._toggleButtonState(n._inputs,n._button)}))}))}},{key:"enableValidation",value:function(){var e=this;this._form.addEventListener("submit",(function(t){t.preventDefault(),e._button.classList.add(e._inactiveButtonClass),e._button.disabled=!0})),this._setEventListeners()}}])&&t(r.prototype,o),n}();function r(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}document.querySelector(".modal__image"),document.querySelector(".modal__caption"),document.querySelector(".overlay_type_preview");var o=function(){function e(t,n){var r,o,i=this,a=t.data,c=t.handleCardClick;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),o=function(){i._heart.classList.toggle("photo-grid__heart_active")},(r="_handleLikeIcon")in this?Object.defineProperty(this,r,{value:o,enumerable:!0,configurable:!0,writable:!0}):this[r]=o,this._text=a.name,this._link=a.link,this._cardSelector=n,this._handleCardClick=c}var t,n;return t=e,(n=[{key:"_getTemplate",value:function(){return document.querySelector(this._cardSelector).content.querySelector(".photo-grid__card").cloneNode(!0)}},{key:"_setEventListeners",value:function(){var e=this,t=this._card.querySelector(".photo-grid__heart"),n=this._card.querySelector(".photo-grid__delete"),r=this._card.querySelector(".photo-grid__picture");t.addEventListener("click",(function(){return e._handleLikeIcon()})),n.addEventListener("click",(function(){return e._handleDeleteIcon()})),r.addEventListener("click",(function(){return e._handleCardClick({link:e._link,name:e._name})}))}},{key:"_handleDeleteIcon",value:function(){this._card.remove()}},{key:"_prepareCard",value:function(){this._card.querySelector(".photo-grid__title").textContent=this._name,this._card.querySelector(".photo-grid__picture").src=this._link,this._card.alt="Image"+this._name,this._heart=this._card.querySelector(".photo-grid__heart")}},{key:"generateCard",value:function(){return this._card=this._getTemplate(),this._setEventListeners(),this._prepareCard(),this._card}}])&&r(t.prototype,n),e}();function i(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var c=function(){function e(t){var n=this;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),a(this,"_handleEscKey",(function(e){e.preventDefault(),"Escape"===e.key&&n.close()})),a(this,"_handleOutsideClick",(function(e){n.close()})),this._popupElement=document.querySelector(t)}var t,n;return t=e,(n=[{key:"open",value:function(){var e=this;this._popupElement.classList.add("overlay_show"),this._popupElement.classList.contains("overlay_show")&&(document.addEventListener("keydown",(function(){e._handleEscKey()})),this._popupElement.addEventListener("click",(function(){e._handleOutsideClick()})))}},{key:"close",value:function(){this._popupElement.classList.remove("overlay_show"),document.removeEventListener("keydown",this._handleEscKey),modal.removeEventListener("click",this._handleOutsideClick)}},{key:"setEventListeners",value:function(){var e=this,t=document.querySelector(".modal__close-button");this._popupElement.classList.addEventListener("click",(function(n){(n.target.classList.contains("overlay_show")||n.target.classList.contains(t))&&e.close()}))}}])&&i(t.prototype,n),e}();function l(e){return(l="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function u(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function s(e,t,n){return(s="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=d(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(n):o.value}})(e,t,n||e)}function f(e,t){return(f=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function p(e,t){if(t&&("object"===l(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function d(e){return(d=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var h=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&f(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=d(r);if(o){var n=d(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return p(this,e)});function a(e,t){var n;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(n=i.call(this,t))._submitForm=e,n._popupForm=n._popupElement.querySelector(".form-profile"),n}return t=a,(n=[{key:"_getInputValues",value:function(){profileName.textContent=nameInput.value,profileTitle.textContent=titleInput.value}},{key:"setEventListeners",value:function(){s(d(a.prototype),"setEventListeners",this).call(this),this._popupSelector.addEventListener("submit",(function(e){e.preventDefault(),toggleModal(overlay)}))}},{key:"close",value:function(){this._popupForm.reset(),s(d(a.prototype),"close",this).call(this)}}])&&u(t.prototype,n),a}(c);function y(e){return(y="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function m(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function v(e,t,n){return(v="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=w(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(n):o.value}})(e,t,n||e)}function _(e,t){return(_=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function b(e,t){if(t&&("object"===y(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function w(e){return(w=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var g=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&_(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=w(r);if(o){var n=w(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return b(this,e)});function a(e){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),i.call(this,e)}return t=a,(n=[{key:"open",value:function(e){var t=e.link,n=e.name;this._popupElement.querySelector(".modal__caption").textcontent=n;var r=this._popupElement.querySelector(".modal__image");r.src=t,r.alt="Magnificent artist interpretation of ".concat(n),v(w(a.prototype),"open",this).call(this)}}])&&m(t.prototype,n),a}(c);function E(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var S=function(){function e(t,n){var r=t.items,o=t.renderer;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.renderer=o,this.items=r,this.cardContainer=document.querySelector(n)}var t,n;return t=e,(n=[{key:"renderSection",value:function(){var e=this;this.items.forEach((function(t){e.renderer(t)}))}},{key:"addItem",value:function(e){this.cardContainer.prepend(e)}}])&&E(t.prototype,n),e}(),k=document.querySelector("#editButton"),x=document.querySelector("#addPhoto"),C=document.querySelector(".modal_edit_profile").querySelector(".form-profile"),L=document.querySelector(".profile__name"),q=document.querySelector(".profile__job"),O=document.forms.profile.elements.name,j=document.forms.profile.elements.title,M=document.querySelector(".overlay_type_edit"),P=document.querySelector(".modal__close-button_add-photo"),D=document.querySelector(".modal__close-button_image"),B=(document.querySelector(".modal"),document.querySelector(".form_add")),H=function(e){e.classList.toggle("overlay_show"),e.classList.contains("overlay_show")?(document.addEventListener("keydown",handleEscKey),e.addEventListener("click",R)):(document.removeEventListener("keydown",handleEscKey),e.removeEventListener("click",R))},R=function(e){e.target.classList.contains("overlay")&&H(e.target)},A=document.querySelector(".overlay_type_edit"),I=document.querySelector(".overlay_type_add"),T=document.querySelector(".overlay_type_preview");k.addEventListener("click",(function(){O.value=L.textContent,j.value=q.textContent,H(A)})),x.addEventListener("click",(function(){H(I),document.getElementById("newPicture").reset()})),D.addEventListener("click",(function(){H(T)})),document.querySelector(".form-profile").addEventListener("submit",(function(e){e.preventDefault(),L.textContent=O.value,q.textContent=j.value,H(M)})),P.addEventListener("click",(function(){H(I)}));var V=document.querySelector(".form_add"),F=document.forms.newPicture.elements.nameOfPlace,N=document.forms.newPicture.elements.linkOfPlace,W=".card-template",K=function(e){var t=new o(e,W);X.prepend(t.generateCard())};V.addEventListener("submit",(function(e){e.preventDefault();var t={name:F.value,link:N.value};K(t),H(I)}));var X=document.querySelector(".photo-grid");[{name:"Silicon Valley",link:"https://images.unsplash.com/photo-1621646912321-c97a233701d2?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=716&q=80"},{name:"Miami Beach",link:"https://images.unsplash.com/photo-1622942817454-ed616e8d3a2d?ixid=MnwxMjA3fDB8MHx2aXN1YWwtc2VhcmNofDF8fHxlbnwwfHx8fA%3D%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=800&q=60"},{name:"Land of Fire & Ice",link:"https://images.unsplash.com/photo-1620053553156-92e15d54f7ee?ixid=MnwxMjA3fDB8MHxzZWFyY2h8OXx8eWVsbG93JTIwZmxhbWUlMjBibHVlJTIwc21va2V8ZW58MHx8MHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=800&q=60"},{name:"Neon Rain",link:"https://images.unsplash.com/photo-1621870616319-eeb7fdf31234?ixid=MnwxMjA3fDB8MHx2aXN1YWwtc2VhcmNofDF8fHxlbnwwfHx8fA%3D%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=800&q=60"},{name:"Fashion Capital",link:"https://images.unsplash.com/photo-1618245613901-e52b7e0123c7?ixid=MnwxMjA3fDB8MHxwcm9maWxlLXBhZ2V8MTl8fHxlbnwwfHx8fA%3D%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=800&q=60"},{name:"Cape Canaveral",link:"https://images.unsplash.com/photo-1530447920184-b88c8872?ixid=MnwxMjA3fDB8MHx2aXN1YWwtc2VhcmNofDF8fHxlbnwwfHx8fA%3D%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=800&q=60"}].forEach((function(e){K(e)}));var Y=new g(PopupSelector);Y.setEventListeners(),new S({renderer:function(e){console.log("renderer",e);var t=new o({data:e,handleCardClick:function(e){Y.open(e)}},W);X.prepend(t.generateCard())}}).setEventListeners(),new c(PopupSelector).setEventListeners(),new h(submitForm,PopupSelector).setEventListeners();var Z={inputSelector:".modal__form-control-input",submitButtonSelector:".button",inactiveButtonClass:"button_disabled",inputErrorClass:"modal__form-control-input-error",errorClass:"popup-error"},G=new n(Z,C),J=new n(Z,B);G.enableValidation(),J.enableValidation()}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,